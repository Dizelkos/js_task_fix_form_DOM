{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,MAAM,gBAAgB,CAAC;IACrB,IAAI,UAAU;IAEd,KAAK,MAAM,MAAM,YACf,IAAI,OAAO,GAAG,WAAW,IACvB,WAAW,MAAM;SAEjB,WAAW;IAIf,UAAU,OAAO,CAAC,EAAE,CAAC,WAAW,KAAK,QAAQ,KAAK,CAAC;IAEnD,OAAO;AACT;AAEA,KAAK,MAAM,SAAS,OAAQ;IAC1B,MAAM,QAAQ,SAAS,aAAa,CAAC;IACrC,MAAM,YAAY,cAAc,MAAM,IAAI;IAE1C,MAAM,UAAU,CAAC,MAAM,CAAC;IACxB,MAAM,YAAY,CAAC,eAAe;IAElC,MAAM,YAAY,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IACvC,MAAM,WAAW,GAAG;IACpB,MAAM,SAAS,CAAC,GAAG,CAAC;AACtB","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nconst normalizeName = (currentName) => {\n  let newName = '';\n\n  for (const ch of currentName) {\n    if (ch === ch.toUpperCase()) {\n      newName += ' ' + ch;\n    } else {\n      newName += ch;\n    }\n  }\n\n  newName = newName[0].toUpperCase() + newName.slice(1);\n\n  return newName;\n};\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n  const labelName = normalizeName(input.name);\n\n  input.parentNode.append(label);\n  input.setAttribute('placeholder', labelName);\n\n  label.setAttribute('for', `${input.id}`);\n  label.textContent = labelName;\n  label.classList.add('field-label');\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}